find_package(Qt NAMES Qt6 REQUIRED)
find_package(Qt6 REQUIRED COMPONENTS Widgets Sql)

find_package(glog REQUIRED)

set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTORCC ON)

project(
	ftmapi
	VERSION 0.1.0
	LANGUAGES C CXX
)

set(LIB_SOURCE_FILES api.h api.cpp)

add_library(${PROJECT_NAME} STATIC ${LIB_SOURCE_FILES})

aux_source_directory(. SOURCE_FILES)

add_executable(
	${CMAKE_PROJECT_NAME}
	# WIN32
	${SOURCE_FILES}
)

target_link_libraries(
	${CMAKE_PROJECT_NAME}
	PRIVATE Qt6::Widgets Qt6::Sql
	PRIVATE glog::glog
)

include(GNUInstallDirs)
set(PROJECT_EXPORT_TARGETS ${CMAKE_PROJECT_NAME} ${PROJECT_NAME})
set(PROJECT_EXPORT_NAME ${CMAKE_PROJECT_NAME})
set(PROJECT_INSTALL_CMAKEDIR ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_EXPORT_NAME})

add_library(${PROJECT_EXPORT_NAME}::${PROJECT_NAME} ALIAS ${PROJECT_NAME})

install(
	TARGETS ${PROJECT_EXPORT_TARGETS}
	EXPORT ${PROJECT_EXPORT_NAME}Targets
	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
	PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
	INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)

export(
	EXPORT ${PROJECT_EXPORT_NAME}Targets
	NAMESPACE ${PROJECT_EXPORT_NAME}::
	FILE ${PROJECT_EXPORT_NAME}Targets.cmake
)
install(
	FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_EXPORT_NAME}Targets.cmake
	DESTINATION ${PROJECT_INSTALL_CMAKEDIR}
)

include(CMakePackageConfigHelpers)
write_basic_package_version_file(
	${PROJECT_EXPORT_NAME}ConfigVersion.cmake
	VERSION ${PROJECT_VERSION}
	COMPATIBILITY AnyNewerVersion
)
install(
	FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_EXPORT_NAME}ConfigVersion.cmake
	DESTINATION ${PROJECT_INSTALL_CMAKEDIR}
)

install(
	EXPORT ${PROJECT_EXPORT_NAME}Targets
	FILE ${PROJECT_EXPORT_NAME}Config.cmake
	NAMESPACE ${PROJECT_EXPORT_NAME}::
	DESTINATION ${PROJECT_INSTALL_CMAKEDIR}
)
